{
  "permissions": {
    "allow": [
      "Bash(dir:*)",
      "Bash(test:*)",
      "Bash(cat:*)",
      "Bash(PGPASSWORD=postgres psql -h 127.0.0.1 -p 54322 -U postgres -d postgres -c \"\\dt public.users\")",
      "Bash(curl -s \"http://127.0.0.1:54321/rest/v1/tailor_profiles?select=id,business_name,verification_status\" -H \"apikey: sb_publishable_ACJWlzQHlZjBrEguHvfOxg_3BJgxAaH\" -H \"Authorization: Bearer sb_publishable_ACJWlzQHlZjBrEguHvfOxg_3BJgxAaH\")",
      "Bash(curl -s \"http://127.0.0.1:54321/rest/v1/tailor_profiles?select=id,business_name,verification_status&limit=3\" -H \"apikey: sb_publishable_ACJWlzQHlZjBrEguHvfOxg_3BJgxAaH\" -H \"Authorization: Bearer sb_publishable_ACJWlzQHlZjBrEguHvfOxg_3BJgxAaH\")",
      "Bash(curl:*)",
      "Bash(pnpm add:*)",
      "Bash(wc:*)",
      "Bash(cd:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git config:*)",
      "Bash(pnpm dev:*)",
      "Bash(npm:*)",
      "Bash(npm run build:*)",
      "Bash(npx tsc:*)",
      "Bash(if exist .next rmdir /s /q .next)",
      "Bash(NEXT_TELEMETRY_DISABLED=1 npm run dev)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(cmd //c:*)",
      "Bash(cmd /c:*)",
      "Bash(NEXT_TELEMETRY_DISABLED=1 pnpm dev --filter=web)",
      "Bash(powershell:*)",
      "Bash(timeout:*)",
      "Bash(find:*)",
      "Bash(node:*)",
      "Bash(git log:*)",
      "Bash(PGPASSWORD=postgres psql -h 127.0.0.1 -p 54322 -U postgres -d postgres -c \"\\d measurement_profiles\")",
      "Bash(where:*)",
      "Bash(psql:*)",
      "Bash(ls:*)",
      "Bash(pnpm run:*)",
      "Bash(pnpm build:*)",
      "Bash(PGPASSWORD=postgres psql -h 127.0.0.1 -p 54322 -U postgres -d postgres -f supabase/migrations/20241011120000_reorder_favorites_loyalty.sql)",
      "Bash(1)",
      "Bash(pnpm test:*)",
      "Bash(npx playwright test:*)",
      "Bash(SET NEXT_TELEMETRY_DISABLED=1)",
      "Bash(pnpm install:*)",
      "Bash(mkdir:*)",
      "Bash(PGPASSWORD=postgres psql -h 127.0.0.1 -p 54322 -U postgres -d postgres -c \"SELECT table_name FROM information_schema.tables WHERE table_schema = ''public'' AND table_name LIKE ''%dispute%'';\")",
      "Bash(PGPASSWORD=postgres psql -h 127.0.0.1 -p 54322 -U postgres -d postgres -c \"\\d orders\")",
      "Bash(NEXT_TELEMETRY_DISABLED=1 pnpm dev)",
      "Bash(PGPASSWORD=postgres psql -h 127.0.0.1 -p 54322 -U postgres -d postgres -c \"\\d users\")",
      "Bash(PGPASSWORD=postgres psql -h 127.0.0.1 -p 54322 -U postgres -d postgres -c \"\\d profiles\")",
      "Bash(SET PORT=3000)",
      "Bash(PORT=3000 pnpm dev --filter=web)",
      "Bash(PGPASSWORD=postgres psql -h 127.0.0.1 -p 54322 -U postgres -d postgres -c \"\\d order_milestones\")",
      "Bash(pnpm eslint:*)",
      "Bash(pnpm lint:*)",
      "Bash(npx eslint:*)",
      "Bash(python3:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(echo \"=== $file ===\")",
      "Bash(done)",
      "Bash(while read file)",
      "Bash(do npx eslint \"$file\")",
      "Bash(echo \"$file\")",
      "Bash(git reset:*)",
      "Bash(PGPASSWORD=postgres psql -h 127.0.0.1 -p 54322 -U postgres -d postgres -c \"\\df get_dispute_analytics\")",
      "Bash(npx supabase:*)",
      "Bash(PGPASSWORD=postgres psql -h 127.0.0.1 -p 54322 -U postgres -d postgres -c \"SELECT id, email, role FROM users WHERE email = ''adwoa@example.com'';\")",
      "Bash(PORT=3000 NEXT_TELEMETRY_DISABLED=1 pnpm dev)",
      "Bash(PGPASSWORD=postgres psql:*)",
      "Bash(docker compose:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(cp:*)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "playwright-test"
  ]
}
