{
  "permissions": {
    "allow": [
      "Bash(claude --version)",
      "Bash(md-tree:*)",
      "Bash(git init:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(dir /a .bmad-core)",
      "Bash(*create-prd)",
      "Bash(mkdir:*)",
      "Bash(move epic-details.md archive-us-market )",
      "Bash(move epic-list-mvp-revised.md archive-us-market )",
      "Bash(move epic-list.md archive-us-market )",
      "Bash(move external-service-setup-guide.md archive-us-market )",
      "Bash(move professional-measurement-vendor-analysis.md archive-us-market )",
      "Bash(move total-project-scope-380-story-points.md archive-us-market)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "Bash(npx create-next-app@latest:*)",
      "Bash(npm install:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm add:*)",
      "Bash(npx husky init:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm build:*)",
      "Bash(timeout 30 pnpm dev)",
      "Bash(npm run dev:*)",
      "Bash(npm run build:*)",
      "Bash(pkill:*)",
      "Bash(true)",
      "Bash(pnpm dev:*)",
      "Bash(taskkill:*)",
      "Bash(curl:*)",
      "Bash(npx next dev:*)",
      "Bash(npx tsc:*)",
      "Bash(NEXT_DEBUG=1 npm run dev)",
      "Bash(cmd //c taskkill:*)",
      "Bash(timeout 30 npm run dev)",
      "Bash(cmd //c rmdir:*)",
      "Bash(powershell:*)",
      "Bash(handle .next/trace)",
      "Bash(chmod:*)",
      "Bash(cmd //c:*)",
      "Bash(NEXT_TELEMETRY_DISABLED=1 pnpm dev --filter=web)",
      "Bash(NEXT_TELEMETRY_DISABLED=1 npm run dev)",
      "Bash(NEXT_TELEMETRY_DISABLED=1 timeout 20 npm run dev)",
      "Bash(cmd /c:*)",
      "Bash(pnpm ps:*)",
      "Bash(pnpm run dev:*)",
      "Bash(NEXT_TELEMETRY_DISABLED=1 timeout 30 pnpm dev --filter=web)",
      "Bash(timeout 30 pnpm build:web)",
      "Bash(NEXT_TELEMETRY_DISABLED=1 pnpm build:web)",
      "Bash(node:*)",
      "Bash(pnpm exec playwright install:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(gh:*)",
      "Bash(git branch:*)",
      "Bash(touch:*)",
      "Bash(pnpm format:check:*)",
      "Bash(git checkout:*)",
      "Bash(pnpm check-env:*)",
      "Bash(npx next:*)",
      "Bash(pnpm format:*)",
      "Bash(pnpm typecheck:*)",
      "Bash(pnpm audit:*)",
      "Bash(grep:*)",
      "Bash(npm --version)",
      "Bash(pnpm:*)",
      "Bash(timeout 30 pnpm dev --filter=web)",
      "Bash(timeout 30 pnpm test)",
      "Bash(NEXT_TELEMETRY_DISABLED=1 npx next dev --port 3002)",
      "Bash(timeout 30 pnpm test OTPVerification.test.tsx)",
      "Bash(timeout 20 pnpm test auth.service.test.ts)",
      "Bash(timeout 10 NEXT_TELEMETRY_DISABLED=1 npm run dev)",
      "Bash(timeout 30 pnpm test LoginForm.test.tsx)",
      "Bash(timeout 20 pnpm test LoginForm.simple.test.tsx)",
      "Bash(timeout 30 pnpm lint)",
      "Bash(timeout 30 pnpm typecheck)",
      "Bash(timeout 20 pnpm lint)",
      "Bash(cp:*)",
      "Bash(kill:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(timeout 10 pnpm test auth.service.test.ts)",
      "Bash(timeout 10 pnpm test OTPVerification.test.tsx)",
      "Bash(timeout 30 pnpm test ClientOnly.test.tsx)",
      "Bash(timeout 30 NEXT_TELEMETRY_DISABLED=1 pnpm dev --filter=web)",
      "Bash(timeout 20 pnpm dev --filter=web)",
      "Bash(npx eslint:*)",
      "Bash(timeout 30 pnpm lint --fix)",
      "Bash(for page in \"/login\" \"/register\" \"/dashboard\")",
      "Bash(do echo \"Testing $page\")",
      "Bash(done)"
    ],
    "deny": []
  }
}